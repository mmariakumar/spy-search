name: CI (hello + python + frontend + go)

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  hello:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo "CI is working âœ…"

  python-smoke:
    name: Python smoke (install only)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install deps (requirements.txt only)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "No requirements.txt"; fi

  frontend-smoke:
    name: Frontend smoke (install only)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install (skip if no package.json)
        run: |
          if [ -f frontend/package.json ]; then cd frontend && npm ci; else echo "No frontend/package.json"; fi
      - name: Build (only if script exists)
        run: |
          if [ -f frontend/package.json ]; then cd frontend && npm run build --if-present; else echo "Skipping build"; fi

  go-smoke:
    name: Go smoke (build & test)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for go.mod
        id: checkgomod
        run: |
          if [ -f spy-search-go/go.mod ]; then
            echo "has_go=true" >> "$GITHUB_ENV"
          else
            echo "has_go=false" >> "$GITHUB_ENV"
          fi

      - name: Set up Go
        if: env.has_go == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build
        if: env.has_go == 'true'
        working-directory: spy-search-go
        run: go build ./...

      - name: Test (ok if none)
        if: env.has_go == 'true'
        working-directory: spy-search-go
        run: |
          if go list ./... | grep -q .; then
            go test ./... -v || true
          else
            echo "No Go packages to test"
          fi

      - name: Skip Go
        if: env.has_go == 'false'
        run: echo "No Go code found, skipping Go job"
